{"version":3,"sources":["getWeb3.js","App.js","serviceWorker.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","App","useState","setWeb3","accounts","setAccounts","contract","setContract","voteStatus","setVoteStatus","whitelist","setWhitelist","proposals","setProposals","proposal","setProposal","proposalErr","setProposalErr","addr","setAddr","addrErr","setAddrErr","ownerCheck","setOwnerCheck","resp","setResp","addressToWhitelist","setAddressToWhitelist","respSet","setRespSet","newProposal","setNewProposal","vote","setVote","transferOwnership","setTransferOwnership","renounceOwnership","setRenounceOwnership","proposalIdInput","setProposalIdInput","addressInput","setAddressInput","addressToWhitelistInput","setAddressToWhitelistInput","proposalInput","setProposalInput","voteInput","setVoteInput","transferOwnershipInput","setTransferOwnershipInput","useEffect","eth","getAccounts","on","location","reload","_chainId","net","getId","networkId","deployedNetwork","VotingContract","networks","instance","Contract","abi","address","methods","owner","call","alert","error","init","response","getVoteStatus","events","VoterRegistered","fromBlock","event","returnValues","voterAddress","err","message","ProposalsRegistrationStarted","ProposalRegistered","proposalId","ProposalsRegistrationEnded","VotingSessionStarted","Voted","VotingSessionEnded","VotesTallied","WorkflowStatusChange","getOwner","getWhitelist","getProposals","getWinningProposalId","winningProposalId","getProposalById","value","getVoterByAddress","voters","addToWhitelist","send","from","proposalsRegistrationStart","proposalsRegistration","proposalsRegistrationEnd","votingSessionStart","handleVote","votingSessionEnd","votesTally","handleTransferOwnership","handleRenounceOwnership","className","style","textAlign","display","justifyContent","Card","width","bg","text","Header","Body","Tab","Container","Row","Col","sm","ListGroup","Item","action","href","onClick","Form","Group","Control","placeholder","type","id","ref","input","Button","variant","color","alignSelf","Content","Pane","eventKey","fontSize","padding","Table","marginBottom","length","map","add","index","key","prop","description","voteCount","margin","marginTop","Spinner","animation","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8644621.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;\n","import React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Spinner, Card, Form, Button, Tab, Row, Col, ListGroup, Table } from \"react-bootstrap\";\nimport VotingContract from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nfunction App() {\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [contract, setContract] = useState(null);\n  const [voteStatus, setVoteStatus] = useState(null);\n  const [whitelist, setWhitelist] = useState([]);\n  const [proposals, setProposals] = useState([]);\n  const [proposal, setProposal] = useState(null);\n  const [proposalErr, setProposalErr] = useState(null);\n  const [addr, setAddr] = useState(null);\n  const [addrErr, setAddrErr] = useState(null);\n\n  const [ownerCheck, setOwnerCheck] = useState();\n  const [resp, setResp] = useState();\n  const [addressToWhitelist, setAddressToWhitelist] = useState();\n  const [respSet, setRespSet] = useState();\n  const [newProposal, setNewProposal] = useState();\n  const [vote, setVote] = useState();\n  const [transferOwnership, setTransferOwnership] = useState();\n  const [renounceOwnership, setRenounceOwnership] = useState();\n  const [proposalIdInput, setProposalIdInput] = useState();\n  const [addressInput, setAddressInput] = useState();\n  const [addressToWhitelistInput, setAddressToWhitelistInput] = useState();\n  const [proposalInput, setProposalInput] = useState();\n  const [voteInput, setVoteInput] = useState();\n  const [transferOwnershipInput, setTransferOwnershipInput] = useState();\n\n  useEffect(() => {\n    const init = async() => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3();\n        // Use web3 to get the user's accounts.\n        const accounts = await web3.eth.getAccounts();\n  \n        if (window.ethereum) {\n          window.ethereum.on('accountsChanged', (accounts) => {\n            setAccounts({ accounts });\n            window.location.reload();\n          });\n  \n          window.ethereum.on('chainChanged', (_chainId) => window.location.reload());\n        }\n\n        // Get the contract instance.\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = VotingContract.networks[networkId];\n        const instance = new web3.eth.Contract(\n          VotingContract.abi,\n          deployedNetwork && deployedNetwork.address,\n        );\n  \n        //web3.eth.handleRevert = true;\n  \n        setOwnerCheck(accounts[0] === await instance.methods.owner().call());\n\n        // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n        setWeb3(web3);\n        setAccounts(accounts);\n        setContract(instance);\n        // this.setState({ web3, accounts, contract: instance, ownerCheck }, this.getVoteStatus);\n      } catch(error) {\n        // Catch any errors for any of the above operations.\n        alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n        );\n        console.error(error);\n      }\n    }\n    init();\n  }, []);\n\n  useEffect(() => {\n    if (web3 !== null & contract !== null) {\n      const getVoteStatus = async() => {\n        const response = await contract.methods.voteStatus().call();\n        switch (response) {\n          case \"0\":\n            setVoteStatus(\"Registering Voters\");\n            break;\n          case \"1\":\n            setVoteStatus(\"Proposals Registration Started\");\n            break;\n          case \"2\":\n            setVoteStatus(\"Proposals Registration Ended\");\n            break;\n          case \"3\":\n            setVoteStatus(\"Voting Session Started\");\n            break;\n          case \"4\":\n            setVoteStatus(\"Voting Session Ended\");\n            break;\n          case \"5\":\n            setVoteStatus(\"Votes Tallied\");\n            break;\n          default:\n            setVoteStatus(`Error: voteStatus ${response} doesn't exist.`);\n            break;\n        }\n      }\n      getVoteStatus();\n    };\n  }, [web3, contract]);\n\n  useEffect(() => {\n    if (contract !== null && voteStatus !== null) {\n      contract.events.VoterRegistered({fromBlock: 0})\n      .on('data', event => { setAddressToWhitelist(`Address ${event.returnValues.voterAddress} is now in the whitelist`) })\n      .on('error', err => setAddressToWhitelist(err.message))\n    \n      contract.events.ProposalsRegistrationStarted({fromBlock: 0})\n      .on('data', event => {\n        if (voteStatus !== \"Proposals Registration Started\") {\n          setRespSet(\"Proposals Registration Start\")\n          alert(\"Proposals Registration Start\")\n          window.location.reload();\n        }\n      })\n      .on('error', err => setRespSet(err.message))\n\n      contract.events.ProposalRegistered({fromBlock: 0})\n      .on('data', event => { setNewProposal(`Proposal ${event.returnValues.proposalId} has been successfully saved`) })\n      .on('error', err => setNewProposal(err.message))\n\n      contract.events.ProposalsRegistrationEnded({fromBlock: 0})\n      .on('data', event => {\n        if (voteStatus !== \"Proposals Registration Ended\") {\n          setRespSet(\"Proposals Registration End\")\n          alert(\"Proposals Registration End\")\n          window.location.reload();\n        }\n      })\n      .on('error', err => setRespSet(err.message))\n\n      contract.events.VotingSessionStarted({fromBlock: 0})\n      .on('data', event => {\n        if (voteStatus !== \"Voting Session Started\") {\n          setRespSet(\"Voting Session Start\")\n          alert(\"Voting Session Start\")\n          window.location.reload();\n        }\n      })\n      .on('error', err => setRespSet(err.message))\n\n      contract.events.Voted({fromBlock: 0})\n      .on('data', event => { setVote(`Your Vote \"${event.returnValues.proposalId}\" has been successfully saved`) })\n      .on('error', err => setVote(err.message))\n\n      contract.events.VotingSessionEnded({fromBlock: 0})\n      .on('data', event => {\n        if (voteStatus !== \"Voting Session Ended\") {\n          setRespSet(\"Voting Session End\")\n          alert(\"Voting Session End\")\n          window.location.reload();\n        }\n      })\n      .on('error', err => setRespSet(err.message))\n\n      contract.events.VotesTallied({fromBlock: 0})\n      .on('data', event => {\n        if (voteStatus !== \"Votes Tallied\") {\n          setRespSet(\"The votes have been successfully counted\")\n          alert(\"The votes have been successfully counted\")\n          window.location.reload();\n        }\n      })\n      .on('error', err => setRespSet(err.message))\n\n      contract.events.WorkflowStatusChange({fromBlock: 0})\n      .on('data', event => {\n        console.log(event.returnValues);\n      })\n      .on('error', err => console.error(err))\n    }\n  }, [contract, voteStatus])\n\n  // ********************* GET FUNCTIONS *********************\n\n  const getOwner = async() => { setResp(await contract.methods.owner().call()) }\n\n  const getWhitelist = async() => { setWhitelist(await contract.methods.getWhitelist().call()) }\n\n  const getProposals = async() => { setProposals(await contract.methods.getProposals().call()) }\n\n  const getWinningProposalId = async() => {\n    setResp(`The winning proposal is the number ${await contract.methods.winningProposalId().call()}`);\n  }\n\n  const getProposalById = async() => {\n    try { setProposal(await contract.methods.proposals(proposalIdInput.value).call()) }\n    catch(error) { setProposalErr(error.message) }\n  }\n\n  const getVoterByAddress = async() => {\n    try { setAddr(await contract.methods.voters(addressInput.value).call()) } \n    catch(error) { setAddrErr(error.message) }\n  }\n\n  // ********************* SET FUNCTIONS *********************\n\n  const addToWhitelist = async() => {\n    try { await contract.methods.addToWhitelist(addressToWhitelistInput.value).send({ from: accounts[0] }) } \n    catch(error) { setAddressToWhitelist(error.message) }\n  }\n\n  const proposalsRegistrationStart = async() => {\n    try { await contract.methods.proposalsRegistrationStart().send({ from: accounts[0] }) }\n    catch(error) { setRespSet(error.message) }\n  }\n\n  const proposalsRegistration = async() => {\n    try { await contract.methods.proposalsRegistration(proposalInput.value).send({ from: accounts[0] }) } \n    catch(error) { setNewProposal(error.message) }\n  }\n\n  const proposalsRegistrationEnd = async() => {\n    try { await contract.methods.proposalsRegistrationEnd().send({ from: accounts[0] }) } \n    catch(error) { setRespSet(error.message) }\n  }\n\n  const votingSessionStart = async() => {\n    try { await contract.methods.votingSessionStart().send({ from: accounts[0] }); } \n    catch(error) { setRespSet(error.message); }\n  }\n\n  const handleVote = async() => {\n    try { await contract.methods.vote(voteInput.value).send({ from: accounts[0] }) } \n    catch(error) { setVote(error.message) }\n  }\n\n  const votingSessionEnd = async() => {\n    try { await contract.methods.votingSessionEnd().send({ from: accounts[0] }) } \n    catch(error) { setRespSet(error.message) }\n  }\n\n  const votesTally = async() => {\n    try { await contract.methods.votesTally().send({ from: accounts[0] }) } \n    catch(error) { setRespSet(error.message) }\n  }\n\n  // ********************* OWNER FUNCTIONS *********************\n\n  const handleTransferOwnership = async() => {\n    try {\n      await contract.methods.transferOwnership(transferOwnershipInput.value).send({ from: accounts[0] })\n      setTransferOwnership(`${transferOwnershipInput.value} is the new owner`);\n      alert(`${transferOwnershipInput.value} is the new owner`);\n      window.location.reload();\n    } catch(error) {\n      setTransferOwnership(error.message);\n    }\n  }\n\n  const handleRenounceOwnership = async() => {\n    try {\n      await contract.methods.renounceOwnership().send({ from: accounts[0] });\n      setRenounceOwnership(\"You are not owner anymore\");\n      alert(\"You are not owner anymore\");\n      window.location.reload();\n    } catch(error) {\n      setRenounceOwnership(error.message);\n    }\n  }\n\n  // ********************************************************** FRONT **************************************************\n\n  if (!web3) \n    return (\n      <div className=\"App\"style={{marginTop: 50}}>\n        <Spinner animation=\"border\" variant=\"dark\" style={{marginBottom: 20}} />\n        <h3>Loading Web3, accounts, and contract...</h3>\n      </div>\n    )\n\n    return (\n      <div className=\"App\">\n        <div style={{textAlign: \"center\"}}>\n          <h1>Voting DApp</h1>\n          <hr/>\n        </div>\n\n        {/* ********************* GET FUNCTIONS ********************* */}\n\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n          <Card style={{ width: '50rem'}} bg=\"info\" text='light'>\n            <Card.Header><strong>List of GET functions</strong></Card.Header>\n              <Card.Body>\n              <Tab.Container>\n                <Row>\n                  <Col sm={5}>\n                    <ListGroup>\n                      <ListGroup.Item action href=\"#link1\" onClick={getOwner}>Owner</ListGroup.Item>\n                      <ListGroup.Item action href=\"#link2\" onClick={getWhitelist}>Whitelist</ListGroup.Item>\n                      <ListGroup.Item action href=\"#link3\" onClick={getProposals}>Proposals List</ListGroup.Item>\n                      <ListGroup.Item action href=\"#link4\">Vote Status</ListGroup.Item>\n                      { voteStatus === \"Votes Tallied\" &&\n                        <ListGroup.Item action href=\"#link5\" onClick={getWinningProposalId}>Winning Proposal</ListGroup.Item>\n                      }\n\n                      <ListGroup.Item action href=\"#link6\" onClick={() => setProposal(null)} >\n                        <Form.Group style={{display: 'flex'}} >\n                          <Form.Control placeholder=\"Get Proposal by ID\" type=\"text\" id=\"proposalIdInput\" ref={input => setProposalIdInput(input)}/>\n                          <Button onClick={getProposalById} variant=\"info\" style={{color:'white'}}>Ok</Button>\n                        </Form.Group>\n                      </ListGroup.Item>\n                      \n                      <ListGroup.Item action href=\"#link7\" onClick={() => setAddr(null)} >\n                        <Form.Group style={{display: 'flex'}} >\n                          <Form.Control placeholder=\"Get Voter by address\" type=\"text\" id=\"addressInput\" ref={input => setAddressInput(input)}/>\n                          <Button onClick={getVoterByAddress} variant=\"info\" style={{color:'white'}}>Ok</Button>\n                        </Form.Group>\n                      </ListGroup.Item>\n                    </ListGroup>\n                  </Col>\n\n                  <Col sm={7} style={{alignSelf: \"center\"}}>\n                    <Tab.Content>\n                      <Tab.Pane eventKey=\"#link1\" style={{fontSize: 20}}>{resp}</Tab.Pane>\n\n                      <Tab.Pane eventKey=\"#link2\">\n                        <ListGroup variant=\"flush\">\n                          <ListGroup.Item style={{padding: 0}} >\n                            <Table style={{marginBottom: 0}}>\n                              <thead>\n                                <tr>\n                                  <th>Whitelist</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {whitelist.length ?\n                                  whitelist.map((add, index) => <tr key={index}><td>{index} : {add}</td></tr>)\n                                  : <tr><td>There is no address yet</td></tr>\n                                }\n                              </tbody>\n                            </Table>\n                          </ListGroup.Item>\n                        </ListGroup>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"#link3\">\n                        <ListGroup variant=\"flush\">\n                          <ListGroup.Item style={{padding: 0}} >\n                            <Table style={{marginBottom: 0}}>\n                              <thead>\n                                <tr>\n                                  <th>Proposals List</th>\n                                </tr>\n                              </thead>\n                              <tbody>\n                                {proposals.length ?\n                                  proposals.map((prop, index) => <tr key={index}><td>Proposal {index} : {prop.description} - voteCount: {prop.voteCount}</td></tr>)\n                                  : <tr><td>There is no proposal yet</td></tr>\n                                }\n                              </tbody>\n                            </Table>\n                          </ListGroup.Item>\n                        </ListGroup>\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"#link4\" style={{fontSize: 20}}>{voteStatus}</Tab.Pane>\n\n                      <Tab.Pane eventKey=\"#link5\" style={{fontSize: 20}}>{resp}</Tab.Pane>\n\n                      <Tab.Pane eventKey=\"#link6\">\n                        {proposal !== null ?\n                          <ListGroup variant=\"flush\">\n                            <ListGroup.Item style={{padding: 0}} >\n                              <Table style={{marginBottom: 0}}>\n                                <thead>\n                                  <tr>\n                                    <th>Proposal number {proposalIdInput.value}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr><td>Description: {proposal[0]}</td></tr>\n                                  <tr><td>VoteCount: {proposal[1]}</td></tr>\n                                </tbody>\n                              </Table>\n                            </ListGroup.Item>\n                          </ListGroup>\n                        : proposalErr }\n                      </Tab.Pane>\n\n                      <Tab.Pane eventKey=\"#link7\">\n                        {addr !== null ?\n                          <ListGroup variant=\"flush\">\n                            <ListGroup.Item style={{padding: 0}} >\n                              <Table style={{marginBottom: 0}}>\n                                <thead>\n                                  <tr>\n                                    <th>Address {addressInput.value}</th>\n                                  </tr>\n                                </thead>\n                                <tbody>\n                                  <tr><td>isRegistered: {addr[0] ? \"True\" : \"False\"}</td></tr>\n                                  <tr><td>HasVoted: {addr[1] ? \"True\" : \"False\"}</td></tr>\n                                  <tr><td>proposalsCount: {addr[2]}</td></tr>\n                                  <tr><td>votedProposalId: {addr[3]}</td></tr>\n                                </tbody>\n                              </Table>\n                            </ListGroup.Item>\n                          </ListGroup>\n                        : addrErr }\n                      </Tab.Pane>\n                    </Tab.Content>\n                  </Col>\n                </Row>\n              </Tab.Container>\n            </Card.Body>\n          </Card>\n        </div>\n\n        {/* ********************* SET FUNCTIONS ********************* */}\n        \n        { ((ownerCheck && voteStatus !== \"Votes Tallied\") || voteStatus === \"Proposals Registration Started\" || voteStatus === \"Voting Session Started\") && \n          <div style={{display: 'flex', justifyContent: 'center', margin: 50}}>\n            <Card style={{ width: '50rem'}} bg=\"danger\" text='light'>\n              <Card.Header><strong>List of SET functions</strong></Card.Header>\n                <Card.Body>\n                <Tab.Container>\n                  <Row>\n                    <Col sm={5}>\n                      <ListGroup>\n                        { voteStatus === \"Registering Voters\" && <>\n                          <ListGroup.Item action href=\"#link1\" onClick={() => setAddressToWhitelist(\"\")} >\n                            <Form.Group style={{display: 'flex'}} >\n                              <Form.Control placeholder=\"Add To Whitelist\" type=\"text\" id=\"addressToWhitelistInput\" ref={input => setAddressToWhitelistInput(input)}/>\n                              <Button onClick={addToWhitelist} variant=\"danger\" style={{color:'white'}}>Ok</Button>\n                            </Form.Group>\n                          </ListGroup.Item>\n\n                          <ListGroup.Item action href=\"#link2\" onClick={proposalsRegistrationStart}>Proposals Registration Start</ListGroup.Item>\n                        </>}\n\n                        { voteStatus === \"Proposals Registration Started\" && <>\n                          <ListGroup.Item action href=\"#link3\" onClick={() => setNewProposal(\"\")} >\n                            <Form.Group style={{display: 'flex'}} >\n                              <Form.Control placeholder=\"Proposals Registration\" type=\"text\" id=\"proposalInput\" ref={input => setProposalInput(input)}/>\n                              <Button onClick={proposalsRegistration} variant=\"danger\" style={{color:'white'}}>Ok</Button>\n                            </Form.Group>\n                          </ListGroup.Item>\n                        { ownerCheck &&\n                          <ListGroup.Item action href=\"#link4\" onClick={proposalsRegistrationEnd}>Proposals Registration End</ListGroup.Item>\n                        }</>}\n\n                        { voteStatus === \"Proposals Registration Ended\" &&\n                          <ListGroup.Item action href=\"#link5\" onClick={votingSessionStart}>Voting Session Start</ListGroup.Item>\n                        }\n\n                        { voteStatus === \"Voting Session Started\" && <>\n                          <ListGroup.Item action href=\"#link6\" onClick={() => setVote(\"\")} >\n                            <Form.Group style={{display: 'flex'}} >\n                              <Form.Control placeholder=\"Vote\" type=\"text\" id=\"voteInput\" ref={input => setVoteInput(input)} />\n                              <Button onClick={handleVote} variant=\"danger\" style={{color:'white'}}>Ok</Button>\n                            </Form.Group>\n                          </ListGroup.Item>\n                          { ownerCheck &&\n                            <ListGroup.Item action href=\"#link7\" onClick={votingSessionEnd}>Voting Session End</ListGroup.Item>\n                          }</>}\n\n                        { voteStatus === \"Voting Session Ended\" &&\n                          <ListGroup.Item action href=\"#link8\" onClick={votesTally}>Votes Tally</ListGroup.Item>\n                        }\n                      </ListGroup>\n                    </Col>\n\n                    <Col sm={7} style={{alignSelf: \"center\"}}>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"#link1\" style={{fontSize: 20}}>{ addressToWhitelist }</Tab.Pane>\n                        <Tab.Pane eventKey=\"#link2\" style={{fontSize: 20}}>{ respSet }</Tab.Pane>\n                        <Tab.Pane eventKey=\"#link3\" style={{fontSize: 20}}>{ newProposal }</Tab.Pane>\n                        <Tab.Pane eventKey=\"#link4\" style={{fontSize: 20}}>{ respSet }</Tab.Pane>\n                        <Tab.Pane eventKey=\"#link5\" style={{fontSize: 20}}>{ respSet }</Tab.Pane>\n                        <Tab.Pane eventKey=\"#link6\" style={{fontSize: 20}}>{ vote }</Tab.Pane>\n                        <Tab.Pane eventKey=\"#link7\" style={{fontSize: 20}}>{ respSet }</Tab.Pane>\n                        <Tab.Pane eventKey=\"#link8\" style={{fontSize: 20}}>{ respSet }</Tab.Pane>\n                      </Tab.Content>\n                    </Col>\n                  </Row>\n                </Tab.Container>\n              </Card.Body>\n            </Card>\n          </div>\n        }\n\n        {/* ********************* OWNER FUNCTIONS ********************* */}\n\n        { ownerCheck && \n          <div style={{display: 'flex', justifyContent: 'center', margin: 50}}>\n            <Card style={{ width: '50rem'}} bg=\"warning\" text='light'>\n              <Card.Header><strong>List of OWNER functions</strong></Card.Header>\n                <Card.Body>\n                <Tab.Container>\n                  <Row>\n                    <Col sm={5}>\n                      <ListGroup>\n                        <ListGroup.Item action href=\"#link1\">\n                          <Form.Group style={{display: 'flex'}} >\n                            <Form.Control placeholder=\"Transfer Ownership\" type=\"text\" id=\"transferOwnershipInput\" ref={input => setTransferOwnershipInput(input)} />\n                            <Button onClick={handleTransferOwnership} variant=\"warning\" style={{color:'white'}}>Ok</Button>\n                          </Form.Group>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item action href=\"#link2\" onClick={handleRenounceOwnership}>Renounce Ownership</ListGroup.Item>\n                      </ListGroup>\n                    </Col>\n\n                    <Col sm={7} style={{alignSelf: \"center\"}}>\n                      <Tab.Content>\n                        <Tab.Pane eventKey=\"#link1\" style={{fontSize: 20}}>{ transferOwnership }</Tab.Pane>\n                        <Tab.Pane eventKey=\"#link2\" style={{fontSize: 20}}>{ renounceOwnership }</Tab.Pane>\n                      </Tab.Content>\n                    </Col>\n                  </Row>\n                </Tab.Container>\n              </Card.Body>\n            </Card>\n          </div>\n        }\n      </div>\n    );\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}